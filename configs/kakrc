eval %sh{kak-lsp --kakoune -s $kak_session}
lsp-enable
map global user l %{: enter-user-mode lsp<ret>} -docstring "LSP mode"

add-highlighter global/ number-lines -relative -separator ''
add-highlighter global/ wrap
set-option -add global ui_options terminal_assistant=none

# see trailing whitespaces
# add-highlighter global/show-trailing-whitespaces regex '\h+$' 0:Error

# remove trailing whitespaces
hook global BufWritePre .* %{ try %{ execute-keys -draft \%s\h+$<ret>d } }

# width in spaces used for indentation (commands < >)
set-option global indentwidth 4

# display width of a tab
set-option global tabstop 4

# remap <tab> to insert indentwidth
map global insert <tab> '<a-;><a-gt>'

hook global InsertCompletionShow .* %{
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
}

hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
}

hook global WinSetOption filetype=go %{
    set-option global indentwidth 0
}

hook global WinSetOption filetype=markdown %{
    remove-highlighter shared/markdown/inline/text/regex_(?<!\*)(\*([^\s*]|([^\s*](\n?[^\n*])*[^\s*]))\*)(?!\*)_1:+i
    remove-highlighter shared/markdown/inline/text/regex_(?<!_)(_([^\s_]|([^\s_](\n?[^\n_])*[^\s_]))_)(?!_)_1:+i
}

hook global ModuleLoaded x11 %{
    set-option global termcmd "alacritty -e sh -c"
}

define-command -hidden fzf_file_edit %{
    evaluate-commands -draft %{
        set-register r %sh{mktemp -d}
        nop %sh{mkfifo $kak_reg_r/out}
        terminal sh -c "fzf > %reg{r}/out"
        set-register s %sh{cat $kak_reg_r/out}
        nop %sh{rm -rf $kak_reg_r}
        nop %sh{
            if [ -n "$kak_reg_s" ]
            then
                echo 'e %reg{s}' > $kak_command_fifo
            fi
        }
    }
}

map global normal <a-minus> ':fzf_file_edit<ret>'
map global normal <a-q> ':db<ret>'
map global normal <a-tab> ':buffer-next<ret>'
map global normal <a-c-tab> ':buffer-previous<ret>'

# Standard
declare-option str background '282a36'
declare-option str foreground 'f8f8f2'
declare-option str selection '44475a'
declare-option str comment '6272a4'
declare-option str red 'ff5555'
declare-option str orange 'ffb86c'
declare-option str yellow 'f1fa8c'
declare-option str green '50fa7b'
declare-option str purple 'bd93f9'
declare-option str cyan '8be9fd'
declare-option str pink 'ff79c6'

# ANSI
declare-option str black '21222c'
declare-option str red 'ff5555'
declare-option str green '50fa7b'
declare-option str yellow 'f1fa8c'
declare-option str blue 'bd93f9'
declare-option str magenta 'ff79c6'
declare-option str cyan '8be9fd'
declare-option str white 'f8f8f2'
declare-option str bright_black '6272a4'
declare-option str bright_red 'ff6e6e'
declare-option str bright_green '69ff94'
declare-option str bright_yellow 'ffffa5'
declare-option str bright_blue 'd6acff'
declare-option str bright_magenta 'ff92df'
declare-option str bright_cyan 'a4ffff'
declare-option str bright_white 'ffffff'

# Alpha blending
declare-option str cursor_alpha '80'
declare-option str selection_alpha '40'

# UI variants
# <https://github.com/dracula/visual-studio-code/blob/master/src/dracula.yml#:~:text=UI Variants>
declare-option str background_lighter '424450'
declare-option str background_light '343746'
declare-option str background_dark '21222c'
declare-option str background_darker '191a21'

# Other
# https://github.com/dracula/visual-studio-code/blob/master/src/dracula.yml#:~:text=other
declare-option str non_text "%opt{background_light}"

# For code
set-face global value "rgb:%opt{purple}" # C++ ⇒ int number = [42];
set-face global type "rgb:%opt{pink}" # C++ ⇒ [int] main() { ... }
set-face global variable "rgb:%opt{cyan}" # Makefile ⇒ [install]:
set-face global module "rgb:%opt{yellow}" # C++ ⇒ #include [<stdio.h>]
set-face global function "rgb:%opt{green}" # https://spec.draculatheme.com#FunctionNames
set-face global string "rgb:%opt{yellow}" # https://spec.draculatheme.com#String
set-face global keyword "rgb:%opt{pink}" # https://spec.draculatheme.com#Keyword
set-face global operator "rgb:%opt{pink}" # Shell ⇒ true [&&] false
set-face global attribute "rgb:%opt{pink}" # C++ ⇒ [enum] Color { ... };
set-face global comment "rgb:%opt{comment}" # https://spec.draculatheme.com#Comment
set-face global documentation comment # Rust ⇒ /// Returns `true`.
set-face global meta "rgb:%opt{pink}" # C++ ⇒ [#include] <stdio.h>
set-face global builtin "rgb:%opt{cyan}" # https://spec.draculatheme.com#Support

# Diffs
# https://spec.draculatheme.com#sec-Diffs
set-face global DiffText "rgb:%opt{comment}"
set-face global DiffHeader "rgb:%opt{comment}"
set-face global DiffInserted "rgb:%opt{green},rgba:%opt{green}20"
set-face global DiffDeleted "rgb:%opt{red},rgba:%opt{red}50"
set-face global DiffChanged "rgb:%opt{orange}"

# For markup
set-face global title "rgb:%opt{purple}+b" # AsciiDoc ⇒ = Document title — https://spec.draculatheme.com#MarkupHeading
set-face global header "rgb:%opt{purple}+b" # AsciiDoc ⇒ == Section title — https://spec.draculatheme.com#MarkupHeading
set-face global mono "rgb:%opt{green}" # AsciiDoc ⇒ `code` — https://spec.draculatheme.com#MarkupInlineCode
set-face global block "rgb:%opt{orange}" # AsciiDoc ⇒ [----][code][----] — https://spec.draculatheme.com#MarkupCodeBlockWithoutSyntax
set-face global link "rgb:%opt{cyan}" # Markdown ⇒ <https://draculatheme.com> — https://spec.draculatheme.com#MarkupLinkUrl
set-face global bullet "rgb:%opt{cyan}" # https://spec.draculatheme.com#MarkupListBulletOrNumber
set-face global list "rgb:%opt{foreground}" # AsciiDoc ⇒ - [item]

# Builtin faces
# set-face global Default "rgb:%opt{foreground},default" # Editor background
# set-face global PrimarySelection "default,rgb:%opt{foreground}" # Pink (alpha-blended)
# set-face global SecondarySelection "default,rgb:%opt{foreground}" # Purple (alpha-blended)
# set-face global PrimaryCursor "default,rgb:%opt{foreground}" # Pink (alpha-blended)
# set-face global SecondaryCursor "default,rgb:%opt{foreground}" # Purple (alpha-blended)
set-face global PrimaryCursorEol "rgb:%opt{pink},rgb:%opt{pink}+F" # Pink (full block)
set-face global SecondaryCursorEol "rgb:%opt{purple},rgb:%opt{purple}+F" # Purple (full block)
set-face global MenuForeground "rgb:%opt{foreground},rgb:%opt{selection}"
set-face global MenuBackground "rgb:%opt{foreground},rgb:%opt{background_dark}"
set-face global MenuInfo "rgb:%opt{comment}" # IntelliSense suggestions
set-face global Information Default # Contextual help blends with the editor background.
set-face global Error "rgb:%opt{foreground},rgb:%opt{red}" # https://spec.draculatheme.com#Invalid
set-face global DiagnosticError "rgb:%opt{red}"
set-face global DiagnosticWarning "rgb:%opt{cyan}"
set-face global StatusLine "rgb:%opt{foreground},rgb:%opt{background_dark}"
set-face global StatusLineMode "rgb:%opt{green}" # [insert]
set-face global StatusLineInfo "rgb:%opt{purple}" # 1 sel
set-face global StatusLineValue "rgb:%opt{green}" # 1 sel param=[42] reg=[y]
set-face global StatusCursor "rgb:%opt{background},rgb:%opt{foreground}" # Cursor in command mode
set-face global Prompt StatusLine # Same as the status line, since they live at the same place.
set-face global BufferPadding "rgb:%opt{non_text}" # Kakoune ⇒ set-option global ui_options terminal_padding_fill=yes

# Builtin highlighter faces
set-face global LineNumbers "rgb:%opt{comment}"
set-face global LineNumberCursor "rgb:%opt{foreground}"
set-face global LineNumbersWrapped "rgb:%opt{background}"
set-face global MatchingChar "rgb:%opt{green}+uf"
set-face global Whitespace "rgb:%opt{non_text}+f"
set-face global WrapMarker "rgb:%opt{non_text}"
